mixin icon(iconName)
	svg&attributes(attributes).icon: use(xlink:href="#" + iconName)

//- social
mixin social(isInline, hasTitle)
	.social&attributes(attributes)(class=isInline ? "social--inline" : '')
		if hasTitle
			.social__title !{util.socTitle}
		#share

//- components
mixin navMenu(menuList)
	nav&attributes(attributes).nav
		ul.nav__list
			for item in menuList
				li.nav__item
					a.nav__link(href=item.url, class=(item.key === currentPage || item.key === 'projects' & currentPage === 'single') ? 'active' : '', class=item.key === "projects" ? "btn-open-aside" : "")= item.title

mixin asideMenu(menuList)
	nav&attributes(attributes).nav
		ul.nav__list
			for item in menuList
				li.nav__item
					a.nav__link(href=item.url) !{item.title}
					span.nav__total= item.total

mixin asideMenuFull(menuList, submenuList)
	nav&attributes(attributes).nav
		ul.nav__list
			for item in menuList
				if item.key === 'projects'
					li.nav__item
						span.nav__link(href=item.url, class=(item.key === currentPage || item.key === 'projects' & currentPage === 'single') ? 'active' : '') !{item.title}
						ul.subnav__list
							each subitem in submenuList
								li.subnav__item
									a.subnav__link(href=subitem.url) !{subitem.title}
				else
					li.nav__item
						a.nav__link(href=item.url) !{item.title}

mixin video(modalID, videoURL, poster)
	.video__wrapper
		div&attributes(attributes).video
			.video__poster: img(src=poster, alt="")
			.video__play.btn-modal(data-target="#" + modalID)
				+icon('play')
		+modal(modalID).modal--video
			.yt
				iframe(id=modalID + "-iframe", src=videoURL + "?rel=0&enablejsapi=1&html5=1", allow="autoplay; encrypted-media", allowfullscreen)

mixin carousel(items, isGallery, galleryName)
	div&attributes(attributes).owl-carousel
		each item in items
			.item
				if isGallery
					a(href=item.img, data-lightbox=galleryName, alt="")
						.item-img: img(src=item.img, alt="")
				else
					.item-img: img.owl-lazy(data-src=item.img, alt="")
				if item.caption
					.caption
						if item.caption.title
							.caption__title= item.caption.title
						if item.caption.note
							.caption__note= item.caption.note
				if item.text
					.item-text.tp-body--base.ml-7.mt-1 !{item.text}

mixin modal(modalID)
	div&attributes(attributes).modal(id=modalID)
		.modal__window
			.modal__close.btn-close-modal
				+icon("cross").icon--block
			.modal__inner
				.modal__content
					block

//- forms
mixin fieldInput(inpID, inpPlaceholder, inpLabel)
	.field.form__field
		if inpLabel
			.field__label-text !{inpLabel}
		label.field__label(for=inpID)
			input&attributes(attributes).field__input(id=inpID)
			if inpPlaceholder
				.field__placeholder !{inpPlaceholder}
		block

mixin fieldTextarea(inpID, inpPlaceholder, inpLabel)
	.field.form__field
		if inpLabel
			.field__label-text !{inpLabel}
		label.field__label.flow-textarea-label(for=inpID)
			textarea&attributes(attributes).field__input.flow-textarea(id=inpID)
			.flow-textarea-example
			if inpPlaceholder
				.field__placeholder !{inpPlaceholder}
		block

mixin fieldSearch(inpID, inpPlaceholder)
	.field.form__field.field--search
		label.field__label(for=inpID)
			input&attributes(attributes).field__input(id=inpID)
			.field__placeholder !{inpPlaceholder}
		button.field__btn
			+icon('loupe')

mixin fieldCheckbox(inpID, inpText, fieldClass = false)
	.field.form__field.field--checkbox(class=fieldClass ? fieldClass : "")
		label.field__label(for=inpID)
			.field__box
				input&attributes(attributes).field__input(id=inpID, type="checkbox")
				.field__icon
					+icon('check')
			.field__text !{inpText}

mixin fieldRadio(inpID, inpText, fieldClass = false)
	.field.form__field.field--radio(class=fieldClass ? fieldClass : "")
		label.field__label(for=inpID)
			.field__box
				input&attributes(attributes).field__input(id=inpID, type="radio")
				.field__icon
					+icon('check')
			.field__text !{inpText}
